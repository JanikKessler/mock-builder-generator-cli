/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/events/": {
    /** Events Get All */
    get: operations["analysis_api_analysis_event_controller_events_get_all"];
    /** Event Post */
    post: operations["analysis_api_analysis_event_controller_event_post"];
  };
  "/api/events/{event_id}": {
    /** Events Get Event */
    get: operations["analysis_api_analysis_event_controller_events_get_event"];
  };
  "/api/events/{id}/": {
    /** Event Put */
    put: operations["analysis_api_analysis_event_controller_event_put"];
    /** Event Delete */
    delete: operations["analysis_api_analysis_event_controller_event_delete"];
  };
  "/api/analysts/": {
    /** Analysts Get */
    get: operations["analysis_api_analysis_analyst_controller_analysts_get"];
    /** Analyst Post */
    post: operations["analysis_api_analysis_analyst_controller_analyst_post"];
  };
  "/api/analysts/{id}": {
    /** Analyst Get */
    get: operations["analysis_api_analysis_analyst_controller_analyst_get"];
    /** Analyst Update */
    put: operations["analysis_api_analysis_analyst_controller_analyst_update"];
    /** Game Update */
    delete: operations["analysis_api_analysis_analyst_controller_game_update"];
  };
  "/api/categories/": {
    /** Analysis Categories Get All */
    get: operations["analysis_api_analysis_category_controller_analysis_categories_get_all"];
  };
  "/api/game_formations/{id}/": {
    /** Game Formations Put */
    put: operations["analysis_api_analysis_game_formation_controller_game_formations_put"];
  };
  "/api/games/": {
    /** Games Get */
    get: operations["analysis_api_analysis_game_controller_games_get"];
  };
  "/api/games/{id}": {
    /** Game Get */
    get: operations["analysis_api_analysis_game_controller_game_get"];
    /** Game Update */
    put: operations["analysis_api_analysis_game_controller_game_update"];
  };
  "/api/workflows/game/{game_uuid}": {
    /** Workflows Get By Game */
    get: operations["analysis_api_analysis_workflow_controller_workflows_get_by_game"];
  };
  "/api/workflows/id/{workflow_id}/": {
    /** Workflow Get By Id */
    get: operations["analysis_api_analysis_workflow_controller_workflow_get_by_id"];
  };
  "/api/workflows/{game_id}": {
    /** Workflow Post New For Game */
    post: operations["analysis_api_analysis_workflow_controller_workflow_post_new_for_game"];
    /** Workflow Delete */
    delete: operations["analysis_api_analysis_workflow_controller_workflow_delete"];
  };
  "/api/workflows/{workflow_id}/": {
    /** Workflow Put */
    put: operations["analysis_api_analysis_workflow_controller_workflow_put"];
  };
  "/api/analysis-data/analysis-data": {
    /** Analysis Data Get */
    get: operations["analysis_api_analysis_data_controller_analysis_data_get"];
  };
  "/api/options/analysis-options": {
    /** Analysis Options Get */
    get: operations["analysis_api_analysis_options_controller_analysis_options_get"];
  };
  "/api/config/clientconfig": {
    /** Get Client Config */
    get: operations["config_api_client_config_controller_get_client_config"];
  };
  "/api/config/analysis-structure": {
    /** Get Analysis Structure */
    get: operations["config_api_client_config_controller_get_analysis_structure"];
  };
  "/api/hotkeys/analysis-engine/{id}": {
    /** Hotkeys Get */
    get: operations["hotkey_api_hotkey_ae_controller_hotkeys_get"];
    /** Hotkey Put */
    put: operations["hotkey_api_hotkey_ae_controller_hotkey_put"];
    /** Hotkey Delete */
    delete: operations["hotkey_api_hotkey_ae_controller_hotkey_delete"];
  };
  "/api/hotkeys/analysis-engine/": {
    /** Hotkey Post */
    post: operations["hotkey_api_hotkey_ae_controller_hotkey_post"];
  };
  "/api/hotkeys/coaching-cockpit/{id}": {
    /** Hotkeys Get */
    get: operations["hotkey_api_hotkey_cc_controller_hotkeys_get"];
  };
  "/api/user/analysis-engine/{keycloak_sub}": {
    /** Get User Data */
    get: operations["user_api_analysis_engine_user_controller_get_user_data"];
  };
  "/api/user/coaching-cockpit/{keycloak_sub}": {
    /** Get User Data */
    get: operations["user_api_coaching_cockpit_user_controller_get_user_data"];
  };
  "/api/delivery/contest/contest-overview-data/{keycloak_sub}": {
    /** Get Contest Overview */
    get: operations["delivery_api_contest_controller_get_contest_overview"];
  };
  "/api/delivery/analysis/game/{game_uuid}": {
    /** Get Game Analysis */
    get: operations["delivery_api_game_analysis_controller_get_game_analysis"];
  };
  "/api/delivery/analysis/contest/{contest_uuid}": {
    /** Get Contests */
    get: operations["delivery_api_game_analysis_controller_get_contests"];
  };
  "/api/resources/analysis/impect/authenticated": {
    /** Check Access */
    get: operations["resources_api_resources_game_impect_controller_check_access"];
  };
  "/api/resources/analysis/impect/game/DFB/{fed_id}": {
    /** Get Game Analysis Dfb */
    get: operations["resources_api_resources_game_impect_controller_get_game_analysis_dfb"];
  };
  "/api/resources/analysis/impect/game/OEFB/{fed_id}": {
    /** Get Game Analysis Oefb */
    get: operations["resources_api_resources_game_impect_controller_get_game_analysis_oefb"];
  };
  "/api/resources/analysis/impect/game/RFEF/{fed_id}": {
    /** Get Game Analysis Rfef */
    get: operations["resources_api_resources_game_impect_controller_get_game_analysis_rfef"];
  };
  "/api/resources/analysis/impect/game/FFF/{fed_id}": {
    /** Get Game Analysis Fff */
    get: operations["resources_api_resources_game_impect_controller_get_game_analysis_fff"];
  };
  "/api/resources/analysis/SAP/authenticated": {
    /** Check Access */
    get: operations["resources_api_resources_game_sap_controller_check_access"];
  };
  "/api/resources/analysis/SAP/game/DFB/{fed_id}": {
    /** Get Game Analysis Dfb */
    get: operations["resources_api_resources_game_sap_controller_get_game_analysis_dfb"];
  };
  "/api/resources/analysis/SAP/game/OEFB/{fed_id}": {
    /** Get Game Analysis Oefb */
    get: operations["resources_api_resources_game_sap_controller_get_game_analysis_oefb"];
  };
  "/api/resources/analysis/SAP/game/RFEF/{fed_id}": {
    /** Get Game Analysis Rfef */
    get: operations["resources_api_resources_game_sap_controller_get_game_analysis_rfef"];
  };
  "/api/resources/analysis/SAP/game/FFF/{fed_id}": {
    /** Get Game Analysis Fff */
    get: operations["resources_api_resources_game_sap_controller_get_game_analysis_fff"];
  };
  "/api/player/{query_string}": {
    /** Get All Filtered Players */
    get: operations["player_api_player_controller_get_all_filtered_players"];
  };
  "/api/season-roster/{team_id}/{season_id}": {
    /** Get All Season Roster Entries For Game */
    get: operations["player_api_season_roster_controller_get_all_season_roster_entries_for_game"];
  };
  "/api/season-roster/{game_id}": {
    /** Get Roster Management Data For Game */
    get: operations["player_api_season_roster_controller_get_roster_management_data_for_game"];
  };
  "/api/season-roster/": {
    /** Update Season Roster Entry */
    put: operations["player_api_season_roster_controller_update_season_roster_entry"];
  };
  "/api/season-roster/active/": {
    /** Update Season Roster Entry Active */
    patch: operations["player_api_season_roster_controller_update_season_roster_entry_active"];
  };
  "/api/match-roster/{game_id}": {
    /** Get All Match Roster Entries For Game */
    get: operations["player_api_match_roster_controller_get_all_match_roster_entries_for_game"];
  };
  "/api/match-roster/": {
    /** Create Match Roster Entry */
    post: operations["player_api_match_roster_controller_create_match_roster_entry"];
  };
  "/api/match-roster/{match_roster_id}/": {
    /** Remove Match Roster Entry */
    delete: operations["player_api_match_roster_controller_remove_match_roster_entry"];
  };
  "/api/roster-management/add-player": {
    /** Add Player To Season And Match Roster */
    post: operations["player_api_roster_management_controller_add_player_to_season_and_match_roster"];
  };
  "/api/roster-management/{game_id}": {
    /** Create Season Roster For Team And Season */
    post: operations["player_api_roster_management_controller_create_season_roster_for_team_and_season"];
  };
  "/api/favorites/produce-clip/": {
    /** Get Clip */
    post: operations["delivery_api_video_favorite_controller_get_clip"];
  };
  "/api/favorites/download-clip/{job_id}": {
    /** Download Clip */
    get: operations["delivery_api_video_favorite_controller_download_clip"];
  };
  "/api/favorites/": {
    /** Get All Favorites For Customer */
    get: operations["delivery_api_video_favorite_controller_get_all_favorites_for_customer"];
    /** Update Favorite */
    put: operations["delivery_api_video_favorite_controller_update_favorite"];
    /** Favorite For Customer */
    post: operations["delivery_api_video_favorite_controller_favorite_for_customer"];
  };
  "/api/favorites/{id}": {
    /** Delete Video Favorite */
    delete: operations["delivery_api_video_favorite_controller_delete_video_favorite"];
  };
  "/api/playlists/produce-playlist/merged/{playlist_uuid}": {
    /** Playlist Merged */
    get: operations["delivery_api_video_playlist_controller_playlist_merged"];
  };
  "/api/playlists/produce-playlist/zipped/{playlist_uuid}": {
    /** Playlist Zipped */
    get: operations["delivery_api_video_playlist_controller_playlist_zipped"];
  };
  "/api/playlists/download-playlist-zipped/{job_uuid}": {
    /** Download Processed Playlist Z */
    get: operations["delivery_api_video_playlist_controller_download_processed_playlist_z"];
  };
  "/api/playlists/download-playlist-merged/{job_uuid}": {
    /** Download Processed Playlist M */
    get: operations["delivery_api_video_playlist_controller_download_processed_playlist_m"];
  };
  "/api/playlists/": {
    /** Get All Playlists For Customer */
    get: operations["delivery_api_video_playlist_controller_get_all_playlists_for_customer"];
    /** Update Playlist */
    put: operations["delivery_api_video_playlist_controller_update_playlist"];
    /** Add Playlist For Customer */
    post: operations["delivery_api_video_playlist_controller_add_playlist_for_customer"];
  };
  "/api/playlists/{id}": {
    /** Delete Video Playlist */
    delete: operations["delivery_api_video_playlist_controller_delete_video_playlist"];
  };
  "/api/customergamenotifications/": {
    /** List Customer Game Notifications */
    get: operations["delivery_api_customer_game_notification_list_customer_game_notifications"];
    /** Add Or Update Customer Game Notification */
    post: operations["delivery_api_customer_game_notification_add_or_update_customer_game_notification"];
  };
  "/api/customergamenotifications/{notification_id}/": {
    /** Update Customer Game Notification */
    put: operations["delivery_api_customer_game_notification_update_customer_game_notification"];
  };
  "/api/localisation/{platform}/{lang}": {
    /** Get Localisation */
    get: operations["localisation_api_localisation_controller_get_localisation"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AnalysisCategoryIdOut */
    AnalysisCategoryIdOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
    };
    /** AnalysisEventOut.ts */
    AnalysisEventOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      category: components["schemas"]["AnalysisCategoryIdOut"];
      /** Selectedlabels */
      selectedLabels: components["schemas"]["AnalysisLabelAndTagOut"][];
      /** Selectedplayers */
      selectedPlayers: components["schemas"]["SelectedPlayerOut"][];
      team?: components["schemas"]["TeamSmallOut"] | null;
      opponentTeam?: components["schemas"]["TeamSmallOut"] | null;
      /** Start */
      start: number;
      /** Event Time */
      eventTime: number;
      /** End */
      end: number;
      /** Team Type */
      teamType: string;
      /**
       * Created At
       * Format: date-time
       */
      createdAt: string;
    };
    /** AnalysisLabelAndTagOut */
    AnalysisLabelAndTagOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      tag: components["schemas"]["AnalysisTagOut"];
      /** Defensivelabeli18Nkey */
      defensiveLabelI18NKey?: string | null;
      /** I18N Key */
      i18NKey: string;
      /** I18N Key Short */
      i18NKeyShort?: string | null;
    };
    /** AnalysisLabelOut */
    AnalysisLabelOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      analysisType: components["schemas"]["AnalysisTypeOut"];
      /** Defensivelabeli18Nkey */
      defensiveLabelI18NKey?: string | null;
      /** I18N Key */
      i18NKey: string;
      /**
       * Outcome Relevant
       * @default false
       */
      outcomeRelevant?: boolean;
      /** Order Number */
      orderNumber: number;
      /** I18N Key Short */
      i18NKeyShort?: string | null;
    };
    /** AnalysisTagOut */
    AnalysisTagOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      analysisType: components["schemas"]["AnalysisTypeOut"];
      position?: components["schemas"]["FormationPositionOut"] | null;
      /** Labels */
      labels: components["schemas"]["AnalysisLabelOut"][];
      /** I18N Key */
      i18NKey: string;
      /** I18N Key Definition */
      i18NKeyDefinition?: string | null;
      /** I18N Key Null Option */
      i18NKeyNullOption?: string | null;
      /** Tag Type */
      tagType: string;
      /** Alternative Tag Type */
      alternativeTagType?: string | null;
      /** Order Number */
      orderNumber: number;
      /** Opponent Team */
      opponentTeam: boolean;
      /**
       * Outcome Relevant
       * @default false
       */
      outcomeRelevant?: boolean;
      /** Input Component */
      inputComponent?: string | null;
      /**
       * Selection Color
       * @description Enter a HEX color code, e.g., #FF5733.
       */
      selectionColor?: string | null;
    };
    /** AnalysisTypeOut */
    AnalysisTypeOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** I18N Key */
      i18NKey: string;
      /**
       * Bg Color
       * @description Enter a HEX color code, e.g., #FF5733.
       */
      bgColor: string;
      /**
       * Text Color
       * @description Enter a HEX color code, e.g., #FF5733.
       */
      textColor: string;
      /**
       * Icon Asset Path
       * @description Enter the asset path within the icons folder, e.g., icons/analysis_type_icon.svg.
       */
      iconAssetPath?: string | null;
      /** Analysis Required */
      analysisRequired: boolean;
      /** Hierarchy Level */
      hierarchyLevel: number;
    };
    /** FormationPositionOut */
    FormationPositionOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** I18N Key */
      i18NKey: string;
      /** Short I18N Key */
      shortI18NKey: string;
      /** Field X */
      fieldX: number;
      /** Field Y */
      fieldY: number;
      /**
       * Order Number
       * @default 0
       */
      orderNumber?: number;
    };
    /** PlayerGameOut */
    PlayerGameOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Playername */
      playerName: string;
      /** Shirtnumber */
      shirtNumber: number;
      /** Starting */
      starting: boolean;
      /** Matchrosterid */
      matchRosterId: string;
      /** Seasonrosterid */
      seasonRosterId: string;
      /** Player First Name */
      playerFirstName?: string | null;
      /** Player Last Name */
      playerLastName: string;
      /** Height Cm */
      heightCm?: number | null;
      /** Weight Kg */
      weightKg?: number | null;
      /** Birthday */
      birthday?: string | null;
      /** Nationality Code */
      nationalityCode?: string | null;
      /** Is Gk */
      isGk: boolean;
      /** Heimspiel Id */
      heimspielId?: number | null;
      /** Player Avatar */
      playerAvatar?: string | null;
    };
    /** SelectedPlayerOut */
    SelectedPlayerOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      tag: components["schemas"]["AnalysisTagOut"];
      playerMatchroster: components["schemas"]["PlayerGameOut"] | null;
      /**
       * Hard Write
       * @default true
       */
      hardWrite?: boolean;
    };
    /** TeamSmallOut */
    TeamSmallOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Name */
      name: string;
      /** Team Logo Url */
      teamLogoUrl?: string | null;
    };
    /** AnalysisEventNew */
    AnalysisEventNew: {
      /**
       * Selectedlabels
       * @default []
       */
      selectedLabels?: string[] | null;
      /**
       * Selectedplayers
       * @default []
       */
      selectedPlayers?: components["schemas"]["SelectedPlayerIn"][] | null;
      /** Game */
      game_id: string;
      /** Category */
      category_id: string;
      /** Team */
      team_id?: string | null;
      /** Start */
      start: number;
      /** Event Time */
      eventTime: number;
      /** End */
      end: number;
    };
    /** SelectedPlayerIn */
    SelectedPlayerIn: {
      /**
       * Tagid
       * Format: uuid
       */
      tagId: string;
      /** Matchrosterid */
      matchRosterId?: string | null;
      /**
       * Hard Write
       * @default true
       */
      hardWrite?: boolean;
    };
    /** AnalysisEventUpdated */
    AnalysisEventUpdated: {
      /** Categoryid */
      categoryId?: string | null;
      /** Teamid */
      teamId?: string | null;
      /** Start */
      start?: number | null;
      /** Eventtime */
      eventTime?: number | null;
      /** End */
      end?: number | null;
      /** Selectedlabels */
      selectedLabels?: string[] | null;
      /** Selectedplayers */
      selectedPlayers?: components["schemas"]["SelectedPlayerIn"][] | null;
    };
    /** AnalystOut */
    AnalystOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Trainedanalysistypes */
      trainedAnalysisTypes: components["schemas"]["AnalysisTypeOut"][];
      /** Keycloak Sub */
      keycloakSub?: string;
      /** Name */
      name: string;
      /** Avatar Url */
      avatarUrl?: string | null;
      /**
       * Removed
       * @default false
       */
      removed?: boolean;
    };
    /** AnalystNew */
    AnalystNew: {
      /** Name */
      name: string;
      /** Avatar Url */
      avatarUrl?: string | null;
      /** Keycloak Sub */
      keycloakSub?: string;
      /** Trained Analysis Types */
      trained_analysis_types: string[];
    };
    /** AnalystUpdate */
    AnalystUpdate: {
      /** Name */
      name?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
      /** Keycloaksub */
      keycloakSub?: string | null;
      /** Trainedanalysistypes */
      trainedAnalysisTypes?: string[] | null;
    };
    /** AnalysisCategoryFlowOriginOut */
    AnalysisCategoryFlowOriginOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      category: components["schemas"]["AnalysisResultingCategoryOut"];
      originCategory: components["schemas"]["AnalysisOriginCategoryOut"] | null;
      originOutcome: components["schemas"]["AnalysisLabelOut"] | null;
      /**
       * Presavedlabels
       * @default []
       */
      preSavedLabels?: components["schemas"]["AnalysisLabelAndTagOut"][] | null;
      /**
       * Playermappings
       * @default []
       */
      playerMappings?: components["schemas"]["PlayerPreSelectionOut"][] | null;
      /**
       * Copiedtag
       * @default []
       */
      copiedTag?: components["schemas"]["CopiedTagFromOriginOut"][] | null;
    };
    /** AnalysisCategoryOut */
    AnalysisCategoryOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      analysisType: components["schemas"]["AnalysisTypeOut"];
      /** Flowsteps */
      flowSteps: components["schemas"]["AnalysisTagCategoryFlowOut"][];
      /** Floworigins */
      flowOrigins: components["schemas"]["AnalysisCategoryFlowOriginOut"][];
      /**
       * Playerautoassignments
       * @default []
       */
      playerAutoAssignments?: components["schemas"]["PlayerAutoAssignmentOut"][] | null;
      /** I18N Key */
      i18NKey: string;
      /**
       * Bg Color
       * @description Enter a HEX color code, e.g., #FF5733.
       */
      bgColor: string;
      /** Order Number */
      orderNumber: number;
      /** Meta Event */
      metaEvent: boolean;
      /** Single Event */
      singleEvent: boolean;
      /**
       * Border Color
       * @description Enter a HEX color code, e.g., #FF5733.
       */
      borderColor: string;
    };
    /** AnalysisOriginCategoryOut */
    AnalysisOriginCategoryOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** I18Nkey */
      i18NKey: string;
      analysisType: components["schemas"]["AnalysisTypeOut"];
    };
    /** AnalysisResultingCategoryOut */
    AnalysisResultingCategoryOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** I18Nkey */
      i18NKey: string;
      analysisType: components["schemas"]["AnalysisTypeOut"];
    };
    /** AnalysisTagCategoryFlowOut */
    AnalysisTagCategoryFlowOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      tag: components["schemas"]["AnalysisTagOut"];
      /** Selectedlabelrequirement */
      selectedLabelRequirement: components["schemas"]["AnalysisLabelOut"][];
      /** Alternative Step */
      alternativeStep: boolean;
      /** Step Number */
      stepNumber: number;
    };
    /** CopiedTagFromOriginOut */
    CopiedTagFromOriginOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      analysisTag: components["schemas"]["AnalysisTagOut"];
      copiedLabel?: components["schemas"]["AnalysisLabelOut"] | null;
      transformToLabel?: components["schemas"]["AnalysisLabelOut"] | null;
    };
    /** PlayerAutoAssignmentOut */
    PlayerAutoAssignmentOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      tag: components["schemas"]["AnalysisTagOut"];
      formationPosition: components["schemas"]["FormationPositionOut"];
      /**
       * Opponent Team
       * @default false
       */
      opponentTeam?: boolean;
    };
    /** PlayerPreSelectionOut */
    PlayerPreSelectionOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      originTag: components["schemas"]["AnalysisTagOut"];
      resultingTag: components["schemas"]["AnalysisTagOut"];
      /** Hard Write */
      hardWrite: boolean;
    };
    /** AnalysisAssignmentOut */
    AnalysisAssignmentOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      analyst: components["schemas"]["AnalystOut"];
      /**
       * Assignment Date
       * Format: date-time
       */
      assignmentDate: string;
    };
    /** AnalysisGameFormationOut */
    AnalysisGameFormationOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Formationtype */
      formationType: string;
      formation: components["schemas"]["FormationOut"] | null;
      team: components["schemas"]["TeamOut"];
      /**
       * Gameformationpositions
       * @default []
       */
      gameFormationPositions?: components["schemas"]["AnalysisGameFormationPositionOut"][] | null;
    };
    /** AnalysisGameFormationPositionOut */
    AnalysisGameFormationPositionOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      player: components["schemas"]["PlayerGameOut"];
      position: components["schemas"]["FormationPositionOut"];
    };
    /** AnalysisGameOut */
    AnalysisGameOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      homeTeam: components["schemas"]["TeamOut"];
      awayTeam: components["schemas"]["TeamOut"];
      analysisType: components["schemas"]["AnalysisTypeOut"];
      contest: components["schemas"]["ContestOut"];
      /** Events */
      events: components["schemas"]["AnalysisEventOut"][];
      assignment?: components["schemas"]["AnalysisAssignmentOut"] | null;
      workflow?: components["schemas"]["AnalysisWorkflowOut"] | null;
      /**
       * Gameformations
       * @default []
       */
      gameFormations?: components["schemas"]["AnalysisGameFormationOut"][] | null;
      analysisStatus: components["schemas"]["AnalysisStatusSchema"];
      /**
       * Game Date
       * Format: date-time
       */
      gameDate: string;
      /** Video Url */
      videoUrl?: string | null;
      /** Online Link */
      onlineLink?: string | null;
    };
    /** AnalysisStatusSchema */
    AnalysisStatusSchema: {
      /** Id */
      id: string;
      /** I18Nkey */
      i18NKey: string;
      /** Fontcolor */
      fontColor: string;
      /** Bgcolor */
      bgColor: string;
    };
    /** AnalysisWorkflowOut */
    AnalysisWorkflowOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      initialLeftTeam: components["schemas"]["TeamOut"] | null;
      initialRightTeam: components["schemas"]["TeamOut"] | null;
      /** Start Date */
      startDate?: string | null;
      /** Home Formation Date */
      homeFormationDate?: string | null;
      /** Away Formation Date */
      awayFormationDate?: string | null;
      /** Analysis Date */
      analysisDate?: string | null;
      /** Review Start Date */
      reviewStartDate?: string | null;
      /** Review End Date */
      reviewEndDate?: string | null;
      /** End Date */
      endDate?: string | null;
    };
    /** CoachOut2 */
    CoachOut2: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Coach First Name */
      coachFirstName?: string | null;
      /** Coach Last Name */
      coachLastName: string;
      /** Nationality Code */
      nationalityCode?: string | null;
    };
    /** ContestOut */
    ContestOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Seasonyear */
      seasonYear: string;
      /** Name */
      name: string;
      /** Nationality Code */
      nationalityCode?: string | null;
      /** Halftime Duration */
      halftimeDuration?: number | null;
      /** Overtime Duration */
      overtimeDuration?: number | null;
      /**
       * Overtime Possible
       * @default false
       */
      overtimePossible?: boolean;
    };
    /** FormationGroupOut */
    FormationGroupOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** I18N Key */
      i18NKey: string;
    };
    /** FormationOut */
    FormationOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      formationGroup: components["schemas"]["FormationGroupOut"];
      /** Positions */
      positions: components["schemas"]["FormationPositionOut"][];
      /** I18N Key */
      i18NKey: string;
    };
    /** TeamOut */
    TeamOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Players
       * @default []
       */
      players?: components["schemas"]["PlayerGameOut"][];
      currentCoach?: components["schemas"]["CoachOut2"] | null;
      /** Name */
      name: string;
      /** Team Logo Url */
      teamLogoUrl?: string | null;
    };
    /** AnalysisGameFormationIn */
    AnalysisGameFormationIn: {
      /** Defensiveformationid */
      defensiveFormationId?: string | null;
      /** Offensiveformationid */
      offensiveFormationId?: string | null;
      /**
       * Teamid
       * Format: uuid
       */
      teamId: string;
      /**
       * Defensiveformationpositions
       * @default []
       */
      defensiveFormationPositions?: components["schemas"]["AnalysisGameFormationPositionIn"][];
      /**
       * Offensiveformationpositions
       * @default []
       */
      offensiveFormationPositions?: components["schemas"]["AnalysisGameFormationPositionIn"][];
    };
    /** AnalysisGameFormationPositionIn */
    AnalysisGameFormationPositionIn: {
      /**
       * Matchrosterid
       * Format: uuid
       */
      matchRosterId: string;
      /**
       * Positionid
       * Format: uuid
       */
      positionId: string;
    };
    /** AnalysisGameSmallOut */
    AnalysisGameSmallOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      homeTeam: components["schemas"]["TeamSmallOut"];
      awayTeam: components["schemas"]["TeamSmallOut"];
      analysisType: components["schemas"]["AnalysisTypeOut"];
      contest: components["schemas"]["ContestOut"];
      assignment?: components["schemas"]["AnalysisAssignmentOut"] | null;
      workflow?: components["schemas"]["AnalysisWorkflowSmallOut"] | null;
      analysisStatus: components["schemas"]["AnalysisStatusSchema"];
      /**
       * Game Date
       * Format: date-time
       */
      gameDate: string;
      /** Video Url */
      videoUrl?: string | null;
      /** Online Link */
      onlineLink?: string | null;
    };
    /** AnalysisWorkflowSmallOut */
    AnalysisWorkflowSmallOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Start Date */
      startDate?: string | null;
      /** Home Formation Date */
      homeFormationDate?: string | null;
      /** Away Formation Date */
      awayFormationDate?: string | null;
      /** Analysis Date */
      analysisDate?: string | null;
      /** Review Start Date */
      reviewStartDate?: string | null;
      /** Review End Date */
      reviewEndDate?: string | null;
      /** End Date */
      endDate?: string | null;
    };
    /** AnalysisGameUpdate */
    AnalysisGameUpdate: {
      /** Analystid */
      analystId?: string | null;
      /** Analysistypeid */
      analysisTypeId?: string | null;
    };
    /** AnalysisWorkflowIn */
    AnalysisWorkflowIn: {
      /**
       * Startdate
       * @default false
       */
      startDate?: boolean | null;
      /**
       * Homeformationdate
       * @default false
       */
      homeFormationDate?: boolean | null;
      /**
       * Awayformationdate
       * @default false
       */
      awayFormationDate?: boolean | null;
      /**
       * Analysisdate
       * @default false
       */
      analysisDate?: boolean | null;
      /**
       * Reviewstartdate
       * @default false
       */
      reviewStartDate?: boolean | null;
      /**
       * Reviewenddate
       * @default false
       */
      reviewEndDate?: boolean | null;
      /**
       * Enddate
       * @default false
       */
      endDate?: boolean | null;
      /** Initialleftteamid */
      initialLeftTeamId?: string | null;
      /** Initialrightteamid */
      initialRightTeamId?: string | null;
    };
    /** AnalysisDataOut */
    AnalysisDataOut: {
      /** Analysisgames */
      analysisGames: components["schemas"]["AnalysisGameSmallOut"][];
      /** Allanalysts */
      allAnalysts: components["schemas"]["AnalystOut"][];
    };
    /** AnalysisOptionsOut */
    AnalysisOptionsOut: {
      /** Allanalysiscategories */
      allAnalysisCategories: components["schemas"]["AnalysisCategoryOut"][];
      /** Allanalysistypes */
      allAnalysisTypes: components["schemas"]["AnalysisTypeOut"][];
      /** Allanalysisstatus */
      allAnalysisStatus: components["schemas"]["AnalysisStatusSchema"][];
      /** Allformations */
      allFormations: components["schemas"]["FormationOut"][];
      /** Allformationpositions */
      allFormationPositions: components["schemas"]["FormationPositionOut"][];
    };
    /** ClientConfigOut */
    ClientConfigOut: {
      /** Keycloakurl */
      keycloakUrl: string;
      /** Authexcludedclientpaths */
      authExcludedClientPaths: string[];
      /** Eventboundaryoffsetseconds */
      eventBoundaryOffsetSeconds: number;
      /** Clipboundarysecondsaroundevent */
      clipBoundarySecondsAroundEvent: number;
      kickoffHt1Category: components["schemas"]["MetaEventConfigInfoOut"];
      finalWhistleHt1Category: components["schemas"]["MetaEventConfigInfoOut"];
      kickoffHt2Category: components["schemas"]["MetaEventConfigInfoOut"];
      finalWhistleHt2Category: components["schemas"]["MetaEventConfigInfoOut"];
      kickoffOt1Category: components["schemas"]["MetaEventConfigInfoOut"];
      finalWhistleOt1Category: components["schemas"]["MetaEventConfigInfoOut"];
      kickoffOt2Category: components["schemas"]["MetaEventConfigInfoOut"];
      finalWhistleOt2Category: components["schemas"]["MetaEventConfigInfoOut"];
      kickoffPenaltyCategory: components["schemas"]["MetaEventConfigInfoOut"];
      finalWhistlePenaltyCategory: components["schemas"]["MetaEventConfigInfoOut"];
    };
    /** MetaEventConfigInfoOut */
    MetaEventConfigInfoOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Defaultvalue */
      defaultValue: number;
    };
    /** AnalysisCategoryCCSmallOut */
    AnalysisCategoryCCSmallOut: {
      /** Id */
      id: string;
      /**
       * Defensive
       * @default false
       */
      defensive?: boolean | null;
      /** I18N Key */
      i18NKey: string;
      /** Order Number */
      orderNumber: number;
      /** Meta Event */
      metaEvent: boolean;
      /** Single Event */
      singleEvent: boolean;
    };
    /** AnalysisDefensiveCategorySmallOut */
    AnalysisDefensiveCategorySmallOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** I18Nkey */
      i18NKey: string;
      /** Ordernumber */
      orderNumber: number;
    };
    /** AnalysisStructureOut */
    AnalysisStructureOut: {
      /** Analysiscategories */
      analysisCategories: components["schemas"]["AnalysisCategoryCCSmallOut"][];
      /** Defensivecategories */
      defensiveCategories: components["schemas"]["AnalysisDefensiveCategorySmallOut"][];
    };
    /** HotkeyDefaultOut */
    HotkeyDefaultOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** I18Nkey */
      i18NKey: string;
      /** Keys */
      keys: string[];
      /** Callbackid */
      callbackId: string;
      /** Default */
      default: boolean;
      /** Context */
      context: string;
      /** Preventbrowserdefault */
      preventBrowserDefault: boolean;
      /** Ordernumber */
      orderNumber: number;
    };
    /** HotkeyUserOut */
    HotkeyUserOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Keys */
      keys: string[];
      user: components["schemas"]["AnalystOut"];
      /**
       * Default
       * @default false
       */
      default?: boolean;
    };
    /** HotkeyUserIn */
    HotkeyUserIn: {
      /** Keys */
      keys: string[];
      /**
       * Userid
       * Format: uuid
       */
      userId: string;
      /**
       * Hotkeyid
       * @default []
       */
      hotkeyId?: string | null;
    };
    /** HotkeyUserDeleteOut */
    HotkeyUserDeleteOut: Record<string, never>;
    /** CustomerOut */
    CustomerOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Keycloak Sub */
      keycloakSub?: string;
      /** Name */
      name: string;
      /** Email */
      email: string;
      /** Avatar Url */
      avatarUrl?: string | null;
    };
    /** ContestOverviewData */
    ContestOverviewData: {
      /** Subscribedcontests */
      subscribedContests: components["schemas"]["SubscribedContest"][];
      /** Recommendedcontests */
      recommendedContests: components["schemas"]["SubscribedContest"][];
    };
    /** GlobalContestCCOut */
    GlobalContestCCOut: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** Nationality Code */
      nationalityCode?: string | null;
      /** Order Number */
      orderNumber?: number | null;
      /** Logo File Url */
      logoFileUrl?: string | null;
    };
    /** SubscribedContest */
    SubscribedContest: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Nationalitycode */
      nationalityCode: string;
      /** Name */
      name: string;
      /** Logofileurl */
      logoFileUrl?: string | null;
      /** Contestsortorder */
      contestSortOrder?: number | null;
      /** Fedid */
      fedId?: string | null;
      /** Season */
      season: string;
      /** Deactivated */
      deactivated: boolean;
      globalContest: components["schemas"]["GlobalContestCCOut"] | null;
      specificTeam?: components["schemas"]["TeamSmallOut"] | null;
      /** Homegamesonly */
      homeGamesOnly: boolean;
    };
    /** AnalysisCCOut */
    AnalysisCCOut: {
      /** Events */
      events: components["schemas"]["AnalysisEventCCOut"][];
      analysisType: components["schemas"]["AnalysisTypeOut"];
      /** Videourl */
      videoUrl: string | null;
      /** Analysiscategories */
      analysisCategories: components["schemas"]["AnalysisCategoryCCOut"][];
      gameInfo: components["schemas"]["AnalysisGameCCOut"];
      homeDefensiveGameFormation: components["schemas"]["AnalysisGameFormationOut"] | null;
      homeOffensiveGameFormation: components["schemas"]["AnalysisGameFormationOut"] | null;
      awayDefensiveGameFormation: components["schemas"]["AnalysisGameFormationOut"] | null;
      awayOffensiveGameFormation: components["schemas"]["AnalysisGameFormationOut"] | null;
      subscriptionInfo: components["schemas"]["SubscriptionInfoCCOut"];
    };
    /** AnalysisCategoryCCOut */
    AnalysisCategoryCCOut: {
      /** Id */
      id: string;
      /**
       * Defensive
       * @default false
       */
      defensive?: boolean | null;
      /** Analysistags */
      analysisTags: components["schemas"]["AnalysisTagCCOut"][];
      /** I18N Key */
      i18NKey: string;
      /** I18N Key Plural */
      i18NKeyPlural?: string | null;
      /** I18N Key Definition */
      i18NKeyDefinition?: string | null;
      /** Order Number */
      orderNumber: number;
      /** Meta Event */
      metaEvent: boolean;
      /** Single Event */
      singleEvent: boolean;
    };
    /** AnalysisEventCCOut */
    AnalysisEventCCOut: {
      /** Id */
      id: string;
      category: components["schemas"]["AnalysisCategoryCCSmallOut"];
      /** Selectedlabels */
      selectedLabels: components["schemas"]["AnalysisLabelAndTagSmallOut"][];
      /** Selectedplayers */
      selectedPlayers: components["schemas"]["SelectedPlayerCCOut"][];
      team?: components["schemas"]["TeamSmallOut"] | null;
      /**
       * Teamtype
       * @enum {string}
       */
      teamType: "HOME" | "AWAY" | "NONE";
      /** Gametime */
      gameTime: number;
      /** Gametimestring */
      gameTimeString: string;
      /** Gametimedetailedstring */
      gameTimeDetailedString: string;
      halftimeCode: components["schemas"]["HalftimeEnum"];
      /** Halftimepercentage */
      halftimePercentage: number;
      /** Originaleventid */
      originalEventId?: string | null;
      /** Start */
      start: number;
      /** Event Time */
      eventTime: number;
      /** End */
      end: number;
      /** Clip Url */
      clipUrl?: string | null;
    };
    /** AnalysisGameCCOut */
    AnalysisGameCCOut: {
      /** Id */
      id: string;
      /** Fedid */
      fedId: string | null;
      /** Onlinelink */
      onlineLink: string | null;
      homeTeam: components["schemas"]["TeamOut"];
      awayTeam: components["schemas"]["TeamOut"];
      homeTeamCoach?: components["schemas"]["CoachOut2"] | null;
      awayTeamCoach?: components["schemas"]["CoachOut2"] | null;
      contest: components["schemas"]["ContestOut"];
      /** Gameformations */
      gameFormations: components["schemas"]["AnalysisGameFormationCCOut"][];
      round?: components["schemas"]["RoundCCOut"] | null;
      /** Venue Name */
      venue_name: string | null;
      analysisStatus: components["schemas"]["AnalysisStatusSchema"];
      /** Homescorehalftime */
      homeScoreHalftime: number;
      /** Awayscorehalftime */
      awayScoreHalftime: number;
      gameTimings: components["schemas"]["GameTimingsCCOut"];
      /**
       * Game Date
       * Format: date-time
       */
      gameDate: string;
      /** Score Home */
      scoreHome?: number | null;
      /** Score Away */
      scoreAway?: number | null;
      /** Xml File Url */
      xmlFileUrl?: string | null;
      /** Match Preview Pdf Url */
      matchPreviewPdfUrl?: string | null;
    };
    /** AnalysisGameFormationCCOut */
    AnalysisGameFormationCCOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Formationtype */
      formationType: string;
      formation: components["schemas"]["FormationOut"] | null;
      /**
       * Gameformationpositions
       * @default []
       */
      gameFormationPositions?: components["schemas"]["AnalysisGameFormationPositionOut"][] | null;
    };
    /** AnalysisLabelAndTagSmallOut */
    AnalysisLabelAndTagSmallOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      tag: components["schemas"]["AnalysisTagSmallOut"];
      /** Defensivelabeli18Nkey */
      defensiveLabelI18NKey?: string | null;
      /** I18N Key */
      i18NKey: string;
      /** I18N Key Short */
      i18NKeyShort?: string | null;
      /** Order Number */
      orderNumber: number;
    };
    /** AnalysisTagCCOut */
    AnalysisTagCCOut: {
      /** Id */
      id: string;
      analysisType: components["schemas"]["AnalysisTypeOut"];
      position?: components["schemas"]["FormationPositionOut"] | null;
      /** Labels */
      labels: components["schemas"]["AnalysisLabelOut"][];
      /** I18N Key */
      i18NKey: string;
      /** I18N Key Definition */
      i18NKeyDefinition?: string | null;
      /** Tag Type */
      tagType: string;
      /** Order Number */
      orderNumber: number;
      /** Opponent Team */
      opponentTeam: boolean;
      /** Input Component */
      inputComponent?: string | null;
      /**
       * Is Cc Filter
       * @default true
       */
      isCcFilter?: boolean;
    };
    /** AnalysisTagSmallOut */
    AnalysisTagSmallOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** I18N Key */
      i18NKey: string;
      /** Tag Type */
      tagType: string;
      /** Alternative Tag Type */
      alternativeTagType?: string | null;
      /** Order Number */
      orderNumber: number;
      /** Opponent Team */
      opponentTeam: boolean;
      /** Input Component */
      inputComponent?: string | null;
      /**
       * Selection Color
       * @description Enter a HEX color code, e.g., #FF5733.
       */
      selectionColor?: string | null;
    };
    /** GameTimingsCCOut */
    GameTimingsCCOut: {
      /** Startfirsthalftime */
      startFirstHalftime: number;
      /** Endfirsthalftime */
      endFirstHalftime: number;
      /** Startsecondhalftime */
      startSecondHalftime: number;
      /** Endsecondhalftime */
      endSecondHalftime: number;
      /** Startfirsthalftimeovertime */
      startFirstHalftimeOvertime?: number | null;
      /** Endfirsthalftimeovertime */
      endFirstHalftimeOvertime?: number | null;
      /** Startsecondhalftimeovertime */
      startSecondHalftimeOvertime?: number | null;
      /** Endsecondhalftimeovertime */
      endSecondHalftimeOvertime?: number | null;
      /** Startpenalty */
      startPenalty?: number | null;
      /** Endpenalty */
      endPenalty?: number | null;
      /** Lengthfirsthalftime */
      lengthFirstHalftime: number;
      /** Lengthsecondhalftime */
      lengthSecondHalftime: number;
      /** Lengthfirsthalftimeovertime */
      lengthFirstHalftimeOvertime: number;
      /** Lengthsecondhalftimeovertime */
      lengthSecondHalftimeOvertime: number;
      /** Lengthpenalty */
      lengthPenalty: number;
      /** Hasovertime */
      hasOvertime: boolean;
      /** Haspenalty */
      hasPenalty: boolean;
      /** Gamelength */
      gameLength: number;
    };
    /**
     * HalftimeEnum
     * @enum {string}
     */
    HalftimeEnum: "HALFTIME_ONE" | "HALFTIME_TWO" | "HALFTIME_OVERTIME_ONE" | "HALFTIME_OVERTIME_TWO" | "PENALTY";
    /** PlayerCCOut */
    PlayerCCOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Playername */
      playerName: string;
      /** Playerlastname */
      playerLastName: string;
    };
    /** RoundCCOut */
    RoundCCOut: {
      /** Id */
      id: string;
      /** Round Order Number */
      roundOrderNumber: number;
      /** Round I18N Key */
      roundI18NKey: string;
      /** Round I18N Key Short */
      roundI18NKeyShort: string;
    };
    /** SelectedPlayerCCOut */
    SelectedPlayerCCOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      tag: components["schemas"]["AnalysisTagCCOut"];
      player?: components["schemas"]["PlayerCCOut"] | null;
    };
    /** SubscriptionInfoCCOut */
    SubscriptionInfoCCOut: {
      /**
       * Gamereportdownload
       * @default false
       */
      gameReportDownload?: boolean | null;
      /**
       * Svldownload
       * @default false
       */
      svlDownload?: boolean | null;
      /**
       * Analysisdownload
       * @default false
       */
      analysisDownload?: boolean | null;
      /**
       * Analyseaccess
       * @default false
       */
      analyseAccess?: boolean | null;
      /**
       * Svlaccess
       * @default false
       */
      svlAccess?: boolean | null;
    };
    /** AnalysisGameCCMinOut */
    AnalysisGameCCMinOut: {
      /** Id */
      id: string;
      round?: components["schemas"]["RoundCCOut"] | null;
      homeTeam: components["schemas"]["TeamSmallOut"];
      awayTeam: components["schemas"]["TeamSmallOut"];
      analysisStatus: components["schemas"]["AnalysisStatusSchema"];
      /**
       * Game Date
       * Format: date-time
       */
      gameDate: string;
      /** Online Link */
      onlineLink?: string | null;
      /** Score Home */
      scoreHome?: number | null;
      /** Score Away */
      scoreAway?: number | null;
      /** Fed Id */
      fedId?: string | null;
      /** Dropkick Id */
      dropkickId?: number | null;
      /** Video Url */
      videoUrl?: string | null;
      /** Xml File Url */
      xmlFileUrl?: string | null;
    };
    /** ContestCCOut */
    ContestCCOut: {
      /** Id */
      id: string;
      /** Seasonyear */
      seasonYear: string;
      /** Games */
      games: components["schemas"]["AnalysisGameCCMinOut"][];
      subscriptionInfo: components["schemas"]["SubscriptionContestInfoCCOut"];
      /** Overtimeduration */
      overtimeDuration?: number | null;
      /** Overtimepossible */
      overtimePossible?: number | null;
      /**
       * Analysisrequired
       * @default true
       */
      analysisRequired?: boolean | null;
      /** Name */
      name: string;
      /** Nationality Code */
      nationalityCode?: string | null;
      /**
       * Deactivated
       * @default false
       */
      deactivated?: boolean;
      /** League Stats Url */
      leagueStatsUrl?: string | null;
      /** Logo File Url */
      logoFileUrl?: string | null;
      /** Halftime Duration */
      halftimeDuration?: number | null;
    };
    /** SubscriptionContestInfoCCOut */
    SubscriptionContestInfoCCOut: {
      /**
       * Leagueinsightsdownload
       * @default false
       */
      leagueInsightsDownload?: boolean | null;
      /** Homegamesonly */
      homeGamesOnly: boolean;
      /** Specificteamid */
      specificTeamId?: string | null;
    };
    /** AnalysisCategoryResourcesOut */
    AnalysisCategoryResourcesOut: {
      /** Id */
      id: string;
      /** I18N Key */
      i18NKey: string;
      /** Order Number */
      orderNumber: number;
      /** Meta Event */
      metaEvent: boolean;
      /** Single Event */
      singleEvent: boolean;
    };
    /** AnalysisEventResourcesOut */
    AnalysisEventResourcesOut: {
      /** Id */
      id: string;
      category: components["schemas"]["AnalysisCategoryResourcesOut"];
      /** Selectedlabels */
      selectedLabels: components["schemas"]["AnalysisLabelAndTagSmallOut"][];
      /** Selectedplayers */
      selectedPlayers: components["schemas"]["SelectedPlayerCCOut"][];
      team?: components["schemas"]["TeamSmallOut"] | null;
      /**
       * Teamtype
       * @enum {string}
       */
      teamType: "HOME" | "AWAY" | "NONE";
      opponentTeam?: components["schemas"]["TeamSmallOut"] | null;
      /** Start */
      start: number;
      /** Event Time */
      eventTime: number;
      /** End */
      end: number;
    };
    /** AnalysisGameResourcesOut */
    AnalysisGameResourcesOut: {
      /** Id */
      id: string;
      /** Fedid */
      fedId: string | null;
      /** Onlinelink */
      onlineLink: string | null;
      homeTeam: components["schemas"]["TeamSmallOut"];
      awayTeam: components["schemas"]["TeamSmallOut"];
      contest: components["schemas"]["ContestOut"];
      /** Gameformations */
      gameFormations: components["schemas"]["AnalysisGameFormationOut"][];
      round?: components["schemas"]["RoundResourcesOut"] | null;
      /** Venue Name */
      venue_name: string | null;
      analysisStatus: components["schemas"]["AnalysisStatusSchema"];
      /**
       * Game Date
       * Format: date-time
       */
      gameDate: string;
      /** Score Home */
      scoreHome?: number | null;
      /** Score Away */
      scoreAway?: number | null;
    };
    /** AnalysisResourcesOut */
    AnalysisResourcesOut: {
      /** Events */
      events: components["schemas"]["AnalysisEventResourcesOut"][];
      analysisType: components["schemas"]["AnalysisTypeOut"];
      /** Videourl */
      videoUrl: string | null;
      /** Analysiscategories */
      analysisCategories: components["schemas"]["AnalysisCategoryResourcesOut"][];
      gameInfo: components["schemas"]["AnalysisGameResourcesOut"];
    };
    /** RoundResourcesOut */
    RoundResourcesOut: {
      /** Id */
      id: string;
      /** Round Order Number */
      roundOrderNumber: number;
      /** Round I18N Key */
      roundI18NKey: string;
      /** Round I18N Key Short */
      roundI18NKeyShort: string;
    };
    /** PlayerOut */
    PlayerOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Playername */
      playerName: string;
      /** Player First Name */
      playerFirstName?: string | null;
      /** Player Last Name */
      playerLastName: string;
      /** Height Cm */
      heightCm?: number | null;
      /** Weight Kg */
      weightKg?: number | null;
      /** Birthday */
      birthday?: string | null;
      /** Nationality Code */
      nationalityCode?: string | null;
      /** Is Gk */
      isGk: boolean;
      /** Heimspiel Id */
      heimspielId?: number | null;
    };
    /** MatchRosterSmallOut */
    MatchRosterSmallOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Starting */
      starting: boolean;
    };
    /** SeasonOut */
    SeasonOut: {
      /** Season */
      season: string;
    };
    /** SeasonRosterOut */
    SeasonRosterOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      season: components["schemas"]["SeasonOut"];
      player: components["schemas"]["PlayerOut"];
      matchRoster?: components["schemas"]["MatchRosterSmallOut"] | null;
      /** Active */
      active: boolean;
      /** Heimspiel Squad Id */
      heimspielSquadId?: number | null;
      /** Shirt Number */
      shirtNumber?: number | null;
    };
    /** RosterManagementOut */
    RosterManagementOut: {
      homeTeam: components["schemas"]["TeamSmallOut"];
      homeTeamCoach: components["schemas"]["CoachOut2"] | null;
      awayTeam: components["schemas"]["TeamSmallOut"];
      awayTeamCoach: components["schemas"]["CoachOut2"] | null;
      /** Hometeamseasonroster */
      homeTeamSeasonRoster: components["schemas"]["SeasonRosterOut"][];
      /** Awayteamseasonroster */
      awayTeamSeasonRoster: components["schemas"]["SeasonRosterOut"][];
    };
    /** SeasonRosterUpdate */
    SeasonRosterUpdate: {
      /**
       * Seasonrosterid
       * Format: uuid
       */
      seasonRosterId: string;
      /** Matchrosterid */
      matchRosterId?: string | null;
      /** Shirtnumber */
      shirtNumber: number;
      /** Playerfirstname */
      playerFirstName: string;
      /** Playerlastname */
      playerLastName: string;
    };
    /** SeasonRosterActiveIn */
    SeasonRosterActiveIn: {
      /**
       * Seasonrosterid
       * Format: uuid
       */
      seasonRosterId: string;
      /** Matchrosterid */
      matchRosterId?: string | null;
      /** Active */
      active: boolean;
    };
    /** MatchRosterOut */
    MatchRosterOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Starting */
      starting: boolean;
      seasonRosterEntry: components["schemas"]["SeasonRosterOut"];
      defensivePosition: components["schemas"]["FormationPositionOut"] | null;
      offensivePosition: components["schemas"]["FormationPositionOut"] | null;
      /** Shirtnumber */
      shirtNumber: number | null;
    };
    /** MatchRosterIn */
    MatchRosterIn: {
      /**
       * Seasonrosterid
       * Format: uuid
       */
      seasonRosterId: string;
      /**
       * Gameid
       * Format: uuid
       */
      gameId: string;
      /**
       * Teamid
       * Format: uuid
       */
      teamId: string;
    };
    /** PlayerIn */
    PlayerIn: {
      /** Playerfirstname */
      playerFirstName: string;
      /** Playerlastname */
      playerLastName: string;
      /** Shirtnumber */
      shirtNumber: number;
      /** Isgk */
      isGk: boolean;
      /** Teamid */
      teamId: string;
      /** Gameid */
      gameId: string;
    };
    /** SeasonRosterIn */
    SeasonRosterIn: {
      /**
       * Teamid
       * Format: uuid
       */
      teamId: string;
      /**
       * Contestid
       * Format: uuid
       */
      contestId: string;
      /**
       * Playerid
       * Format: uuid
       */
      playerId: string;
      /** Active */
      active: boolean | null;
      /** Shirtnumber */
      shirtNumber: number | null;
    };
    /** FavoriteClipInfoIn */
    FavoriteClipInfoIn: {
      /** Favoriteuuid */
      favoriteUuid: string;
      /** Translatedevent */
      translatedEvent: string;
      /** Gametimedetailedstring */
      gameTimeDetailedString: string;
    };
    /** AnalysisGameFavoriteOut */
    AnalysisGameFavoriteOut: {
      /** Id */
      id: string;
      homeTeam: components["schemas"]["TeamOut"];
      awayTeam: components["schemas"]["TeamOut"];
      homeTeamCoach?: components["schemas"]["CoachOut2"] | null;
      awayTeamCoach?: components["schemas"]["CoachOut2"] | null;
      contest: components["schemas"]["ContestOut"];
      round?: components["schemas"]["RoundCCOut"] | null;
      /** Venue Name */
      venue_name: string | null;
      gameTimings: components["schemas"]["GameTimingsCCOut"];
      /**
       * Game Date
       * Format: date-time
       */
      gameDate: string;
      /** Score Home */
      scoreHome?: number | null;
      /** Score Away */
      scoreAway?: number | null;
      /** Video Url */
      videoUrl?: string | null;
    };
    /** VideoFavoriteOut */
    VideoFavoriteOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      game: components["schemas"]["AnalysisGameFavoriteOut"];
      event: components["schemas"]["AnalysisEventCCOut"];
      storedCategory: components["schemas"]["AnalysisCategoryCCSmallOut"];
      /**
       * Created At
       * Format: date-time
       */
      createdAt: string;
      /** Custom Name */
      customName?: string | null;
      /**
       * Custom Trimmed
       * @default false
       */
      customTrimmed?: boolean;
      /** Trim Start */
      trimStart?: number | null;
      /** Trim End */
      trimEnd?: number | null;
      /**
       * Is Defensive
       * @default false
       */
      isDefensive?: boolean;
    };
    /** VideoFavoriteIn */
    VideoFavoriteIn: {
      /**
       * Gameid
       * Format: uuid
       */
      gameId: string;
      /**
       * Eventid
       * Format: uuid
       */
      eventId: string;
      /**
       * Storedcategoryid
       * Format: uuid
       */
      storedCategoryId: string;
      /** Isdefensive */
      isDefensive: boolean;
    };
    /** VideoFavoriteUpdate */
    VideoFavoriteUpdate: {
      /**
       * Videofavoriteid
       * Format: uuid
       */
      videoFavoriteId: string;
      /** Customname */
      customName?: string | null;
      /** Customtrimmed */
      customTrimmed?: boolean | null;
      /** Trimstart */
      trimStart: number | null;
      /** Trimend */
      trimEnd: number | null;
    };
    /** VideoPlaylistOut */
    VideoPlaylistOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Videofavoriteids
       * @default []
       */
      videoFavoriteIds?: string[];
      /**
       * Created At
       * Format: date-time
       */
      createdAt: string;
      /** Name */
      name: string;
    };
    /** VideoPlaylistIn */
    VideoPlaylistIn: {
      /** Name */
      name: string;
    };
    /** VideoPlaylistUpdate */
    VideoPlaylistUpdate: {
      /**
       * Playlistid
       * Format: uuid
       */
      playlistId: string;
      /**
       * Favoriteids
       * @default []
       */
      favoriteIds?: string[];
      /** Name */
      name?: string | null;
    };
    /** CustomerGameNotificationOut */
    CustomerGameNotificationOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Gameid
       * Format: uuid
       */
      gameId: string;
      /** Videonotification */
      videoNotification: boolean;
      /** Datanotification */
      dataNotification: boolean;
    };
    /** CustomerGameNotificationUpdateCreateOut */
    CustomerGameNotificationUpdateCreateOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Message */
      message: string;
    };
    /** CustomerGameNotificationIn */
    CustomerGameNotificationIn: {
      /**
       * Gameid
       * Format: uuid
       */
      gameId: string;
      /** Videonotification */
      videoNotification: boolean;
      /** Datanotification */
      dataNotification: boolean;
    };
    /** CustomerGameNotificationUpdateIn */
    CustomerGameNotificationUpdateIn: {
      /** Videonotification */
      videoNotification?: boolean | null;
      /** Datanotification */
      dataNotification?: boolean | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Events Get All */
  analysis_api_analysis_event_controller_events_get_all: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisEventOut"][];
        };
      };
    };
  };
  /** Event Post */
  analysis_api_analysis_event_controller_event_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnalysisEventNew"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisEventOut"];
        };
      };
    };
  };
  /** Events Get Event */
  analysis_api_analysis_event_controller_events_get_event: {
    parameters: {
      path: {
        event_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisEventOut"];
        };
      };
    };
  };
  /** Event Put */
  analysis_api_analysis_event_controller_event_put: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnalysisEventUpdated"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisEventOut"];
        };
      };
    };
  };
  /** Event Delete */
  analysis_api_analysis_event_controller_event_delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  /** Analysts Get */
  analysis_api_analysis_analyst_controller_analysts_get: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalystOut"][];
        };
      };
    };
  };
  /** Analyst Post */
  analysis_api_analysis_analyst_controller_analyst_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnalystNew"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalystOut"];
        };
      };
    };
  };
  /** Analyst Get */
  analysis_api_analysis_analyst_controller_analyst_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalystOut"];
        };
      };
    };
  };
  /** Analyst Update */
  analysis_api_analysis_analyst_controller_analyst_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnalystUpdate"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalystOut"];
        };
      };
    };
  };
  /** Game Update */
  analysis_api_analysis_analyst_controller_game_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalystOut"];
        };
      };
    };
  };
  /** Analysis Categories Get All */
  analysis_api_analysis_category_controller_analysis_categories_get_all: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisCategoryOut"][];
        };
      };
    };
  };
  /** Game Formations Put */
  analysis_api_analysis_game_formation_controller_game_formations_put: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnalysisGameFormationIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisGameOut"];
        };
      };
    };
  };
  /** Games Get */
  analysis_api_analysis_game_controller_games_get: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisGameSmallOut"][];
        };
      };
    };
  };
  /** Game Get */
  analysis_api_analysis_game_controller_game_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisGameOut"];
        };
      };
    };
  };
  /** Game Update */
  analysis_api_analysis_game_controller_game_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnalysisGameUpdate"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisGameSmallOut"];
        };
      };
    };
  };
  /** Workflows Get By Game */
  analysis_api_analysis_workflow_controller_workflows_get_by_game: {
    parameters: {
      path: {
        game_uuid: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisWorkflowOut"];
        };
      };
    };
  };
  /** Workflow Get By Id */
  analysis_api_analysis_workflow_controller_workflow_get_by_id: {
    parameters: {
      path: {
        workflow_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisWorkflowOut"];
        };
      };
    };
  };
  /** Workflow Post New For Game */
  analysis_api_analysis_workflow_controller_workflow_post_new_for_game: {
    parameters: {
      path: {
        game_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisGameOut"];
        };
      };
    };
  };
  /** Workflow Delete */
  analysis_api_analysis_workflow_controller_workflow_delete: {
    parameters: {
      path: {
        game_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisGameOut"];
        };
      };
    };
  };
  /** Workflow Put */
  analysis_api_analysis_workflow_controller_workflow_put: {
    parameters: {
      path: {
        workflow_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnalysisWorkflowIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisWorkflowOut"];
        };
      };
    };
  };
  /** Analysis Data Get */
  analysis_api_analysis_data_controller_analysis_data_get: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisDataOut"];
        };
      };
    };
  };
  /** Analysis Options Get */
  analysis_api_analysis_options_controller_analysis_options_get: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisOptionsOut"];
        };
      };
    };
  };
  /** Get Client Config */
  config_api_client_config_controller_get_client_config: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ClientConfigOut"];
        };
      };
    };
  };
  /** Get Analysis Structure */
  config_api_client_config_controller_get_analysis_structure: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisStructureOut"];
        };
      };
    };
  };
  /** Hotkeys Get */
  hotkey_api_hotkey_ae_controller_hotkeys_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["HotkeyDefaultOut"][];
        };
      };
    };
  };
  /** Hotkey Put */
  hotkey_api_hotkey_ae_controller_hotkey_put: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["HotkeyUserIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["HotkeyUserOut"];
        };
      };
    };
  };
  /** Hotkey Delete */
  hotkey_api_hotkey_ae_controller_hotkey_delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["HotkeyUserDeleteOut"];
        };
      };
    };
  };
  /** Hotkey Post */
  hotkey_api_hotkey_ae_controller_hotkey_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["HotkeyUserIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["HotkeyUserOut"];
        };
      };
    };
  };
  /** Hotkeys Get */
  hotkey_api_hotkey_cc_controller_hotkeys_get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["HotkeyDefaultOut"][];
        };
      };
    };
  };
  /** Get User Data */
  user_api_analysis_engine_user_controller_get_user_data: {
    parameters: {
      path: {
        keycloak_sub: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalystOut"];
        };
      };
    };
  };
  /** Get User Data */
  user_api_coaching_cockpit_user_controller_get_user_data: {
    parameters: {
      path: {
        keycloak_sub: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CustomerOut"];
        };
      };
    };
  };
  /** Get Contest Overview */
  delivery_api_contest_controller_get_contest_overview: {
    parameters: {
      path: {
        keycloak_sub: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ContestOverviewData"];
        };
      };
    };
  };
  /** Get Game Analysis */
  delivery_api_game_analysis_controller_get_game_analysis: {
    parameters: {
      path: {
        game_uuid: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisCCOut"];
        };
      };
    };
  };
  /** Get Contests */
  delivery_api_game_analysis_controller_get_contests: {
    parameters: {
      path: {
        contest_uuid: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ContestCCOut"];
        };
      };
    };
  };
  /** Check Access */
  resources_api_resources_game_impect_controller_check_access: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisResourcesOut"];
        };
      };
    };
  };
  /** Get Game Analysis Dfb */
  resources_api_resources_game_impect_controller_get_game_analysis_dfb: {
    parameters: {
      path: {
        fed_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisResourcesOut"];
        };
      };
    };
  };
  /** Get Game Analysis Oefb */
  resources_api_resources_game_impect_controller_get_game_analysis_oefb: {
    parameters: {
      path: {
        fed_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisResourcesOut"];
        };
      };
    };
  };
  /** Get Game Analysis Rfef */
  resources_api_resources_game_impect_controller_get_game_analysis_rfef: {
    parameters: {
      path: {
        fed_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisResourcesOut"];
        };
      };
    };
  };
  /** Get Game Analysis Fff */
  resources_api_resources_game_impect_controller_get_game_analysis_fff: {
    parameters: {
      path: {
        fed_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisResourcesOut"];
        };
      };
    };
  };
  /** Check Access */
  resources_api_resources_game_sap_controller_check_access: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisResourcesOut"];
        };
      };
    };
  };
  /** Get Game Analysis Dfb */
  resources_api_resources_game_sap_controller_get_game_analysis_dfb: {
    parameters: {
      path: {
        fed_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisResourcesOut"];
        };
      };
    };
  };
  /** Get Game Analysis Oefb */
  resources_api_resources_game_sap_controller_get_game_analysis_oefb: {
    parameters: {
      path: {
        fed_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisResourcesOut"];
        };
      };
    };
  };
  /** Get Game Analysis Rfef */
  resources_api_resources_game_sap_controller_get_game_analysis_rfef: {
    parameters: {
      path: {
        fed_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisResourcesOut"];
        };
      };
    };
  };
  /** Get Game Analysis Fff */
  resources_api_resources_game_sap_controller_get_game_analysis_fff: {
    parameters: {
      path: {
        fed_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AnalysisResourcesOut"];
        };
      };
    };
  };
  /** Get All Filtered Players */
  player_api_player_controller_get_all_filtered_players: {
    parameters: {
      path: {
        query_string: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PlayerOut"][];
        };
      };
    };
  };
  /** Get All Season Roster Entries For Game */
  player_api_season_roster_controller_get_all_season_roster_entries_for_game: {
    parameters: {
      path: {
        team_id: string;
        season_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SeasonRosterOut"][];
        };
      };
    };
  };
  /** Get Roster Management Data For Game */
  player_api_season_roster_controller_get_roster_management_data_for_game: {
    parameters: {
      path: {
        game_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RosterManagementOut"];
        };
      };
    };
  };
  /** Update Season Roster Entry */
  player_api_season_roster_controller_update_season_roster_entry: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SeasonRosterUpdate"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SeasonRosterOut"];
        };
      };
    };
  };
  /** Update Season Roster Entry Active */
  player_api_season_roster_controller_update_season_roster_entry_active: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SeasonRosterActiveIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SeasonRosterOut"];
        };
      };
    };
  };
  /** Get All Match Roster Entries For Game */
  player_api_match_roster_controller_get_all_match_roster_entries_for_game: {
    parameters: {
      path: {
        game_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["MatchRosterOut"][];
        };
      };
    };
  };
  /** Create Match Roster Entry */
  player_api_match_roster_controller_create_match_roster_entry: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["MatchRosterIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["MatchRosterSmallOut"];
        };
      };
    };
  };
  /** Remove Match Roster Entry */
  player_api_match_roster_controller_remove_match_roster_entry: {
    parameters: {
      path: {
        match_roster_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  /** Add Player To Season And Match Roster */
  player_api_roster_management_controller_add_player_to_season_and_match_roster: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PlayerIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SeasonRosterOut"];
        };
      };
    };
  };
  /** Create Season Roster For Team And Season */
  player_api_roster_management_controller_create_season_roster_for_team_and_season: {
    parameters: {
      path: {
        game_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SeasonRosterIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SeasonRosterOut"];
        };
      };
    };
  };
  /** Get Clip */
  delivery_api_video_favorite_controller_get_clip: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FavoriteClipInfoIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** Download Clip */
  delivery_api_video_favorite_controller_download_clip: {
    parameters: {
      path: {
        job_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** Get All Favorites For Customer */
  delivery_api_video_favorite_controller_get_all_favorites_for_customer: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["VideoFavoriteOut"][];
        };
      };
    };
  };
  /** Update Favorite */
  delivery_api_video_favorite_controller_update_favorite: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["VideoFavoriteUpdate"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** Favorite For Customer */
  delivery_api_video_favorite_controller_favorite_for_customer: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["VideoFavoriteIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["VideoFavoriteOut"];
        };
      };
    };
  };
  /** Delete Video Favorite */
  delivery_api_video_favorite_controller_delete_video_favorite: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** Playlist Merged */
  delivery_api_video_playlist_controller_playlist_merged: {
    parameters: {
      path: {
        playlist_uuid: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** Playlist Zipped */
  delivery_api_video_playlist_controller_playlist_zipped: {
    parameters: {
      path: {
        playlist_uuid: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** Download Processed Playlist Z */
  delivery_api_video_playlist_controller_download_processed_playlist_z: {
    parameters: {
      path: {
        job_uuid: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** Download Processed Playlist M */
  delivery_api_video_playlist_controller_download_processed_playlist_m: {
    parameters: {
      path: {
        job_uuid: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** Get All Playlists For Customer */
  delivery_api_video_playlist_controller_get_all_playlists_for_customer: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["VideoPlaylistOut"][];
        };
      };
    };
  };
  /** Update Playlist */
  delivery_api_video_playlist_controller_update_playlist: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["VideoPlaylistUpdate"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** Add Playlist For Customer */
  delivery_api_video_playlist_controller_add_playlist_for_customer: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["VideoPlaylistIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["VideoPlaylistOut"];
        };
      };
    };
  };
  /** Delete Video Playlist */
  delivery_api_video_playlist_controller_delete_video_playlist: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /** List Customer Game Notifications */
  delivery_api_customer_game_notification_list_customer_game_notifications: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CustomerGameNotificationOut"][];
        };
      };
    };
  };
  /** Add Or Update Customer Game Notification */
  delivery_api_customer_game_notification_add_or_update_customer_game_notification: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomerGameNotificationIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CustomerGameNotificationUpdateCreateOut"];
        };
      };
    };
  };
  /** Update Customer Game Notification */
  delivery_api_customer_game_notification_update_customer_game_notification: {
    parameters: {
      path: {
        notification_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomerGameNotificationUpdateIn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CustomerGameNotificationUpdateCreateOut"];
        };
      };
    };
  };
  /** Get Localisation */
  localisation_api_localisation_controller_get_localisation: {
    parameters: {
      path: {
        platform: string;
        lang: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
}
